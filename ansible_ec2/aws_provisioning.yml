---
- hosts: local
  connection: local
  gather_facts: False
  vars:
    instance_type: t2.micro
    security_group: webservers_sg
    image: ami-08d658f84a6d84a80
    keypair: my-key-pair 
    region: eu-west-1
    count: 1
  vars_files:
    - aws_keys.yml
  tasks:
    - name: Create a security group
      ec2_group:
        name: "{{ security_group }}"
        description: The webservers security group
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
    - name: Launch the new EC2 Instance
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: "{{count}}"
      register: ec2
    - name: Add the newly created host so that we can further contact it
      add_host:
        name: "{{ item.public_ip }}"
        groups: webservers
      with_items: "{{ ec2.instances }}"
    - name: Add tag to Instance(s)
      ec2_tag:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        resource: "{{ item.id }}"
        region: "{{ region }}"
        state: "present"
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Type: webserver
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        state: started
      with_items: "{{ ec2.instances }}"
- hosts: webservers
  remote_user: ubuntu
  become: yes
  gather_facts: no
  pre_tasks:
   - name: ''
     raw: 'curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -'
   - name: 'install python2'
     raw: sudo apt-get -y install python       
     #- name: 'install nodejs'
          #raw: 'sudo apt-get -y install nodejs'
          #- name: 'install git'
          #raw: 'sudo apt-get -y install git'
  tasks:
   - name: Install nodejs
     apt:
       name: nodejs
       state: present
       update_cache: yes
       force_apt_get: yes
   - name: Install git
     apt:
       name: git
       state: present
   - name: Clone FractalJs
     git:
       repo: https://github.com/acouette/FractalJS.git 
       dest: /home/ubuntu/FractalJS
   - name: Install npm dependencies
     raw: 'cd /home/ubuntu/FractalJS && npm i && npm run http-build'
   - name: Copy service file
     copy:
       src: ./fractal.service
       dest: /etc/systemd/system
   - name: Fractal Service
     service:
       name: fractal
       state: started
       enabled: yes

